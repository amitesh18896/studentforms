@model StudentForms.Models.StudentViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, "Country", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CountryId", ViewBag.Countries as SelectList, "-- Select Country --", new { @class = "form-control", id = "ddlCountry" })
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.StateId, "State", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StateId", ViewBag.States as SelectList, "-- Select State --", new { @class = "form-control", id = "ddlState" })
                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.CityId, "City", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CityId", ViewBag.Cities as SelectList, "-- Select City --", new { @class = "form-control", id = "ddlCity" })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("#ddlCountry").change(function () {
                var countryId = $(this).val();
                $.getJSON('/Student/GetStates', { countryId: countryId }, function (states) {
                    var stateDropdown = $("#ddlState");
                    stateDropdown.empty();
                    stateDropdown.append($("<option>").text("-- Select State --").attr("value", ""));
                    $.each(states, function (i, state) {
                        stateDropdown.append($("<option>").text(state.Name).attr("value", state.Id));
                    });
                });
            });

            $("#ddlState").change(function () {
                var stateId = $(this).val();
                $.getJSON('/Student/GetCities', { stateId: stateId }, function (cities) {
                    var cityDropdown = $("#ddlCity");
                    cityDropdown.empty();
                    cityDropdown.append($("<option>").text("-- Select City --").attr("value", ""));
                    $.each(cities, function (i, city) {
                        cityDropdown.append($("<option>").text(city.Name).attr("value", city.Id));
                    });
                });
            });
        });
    </script>
}
